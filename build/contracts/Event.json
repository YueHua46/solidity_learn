{
  "contractName": "Event",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "AutherLog",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "test",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"AutherLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Events \\u5141\\u8bb8\\u767b\\u5f55\\u5230\\u4ee5\\u592a\\u574a\\u533a\\u5757\\u94fe\\u3002\\u4e8b\\u4ef6\\u7684\\u4e00\\u4e9b\\u7528\\u4f8b\\u5305\\u62ec \\u4fa6\\u542c\\u4e8b\\u4ef6\\u548c\\u66f4\\u65b0\\u7528\\u6237\\u754c\\u9762 \\u4e8b\\u4ef6\\uff08Event\\uff09\\u662f\\u4e00\\u79cd\\u5728\\u667a\\u80fd\\u5408\\u7ea6\\u4e2d\\u8bb0\\u5f55\\u4fe1\\u606f\\u7684\\u65b9\\u5f0f\\u3002 \\u5f53\\u67d0\\u4e9b\\u72b6\\u6001\\u53d8\\u91cf\\u7684\\u503c\\u53d1\\u751f\\u6539\\u53d8\\u65f6\\uff0c\\u667a\\u80fd\\u5408\\u7ea6\\u53ef\\u4ee5\\u89e6\\u53d1\\u4e00\\u4e2a\\u4e8b\\u4ef6\\u5e76\\u5c06\\u65b0\\u7684\\u4fe1\\u606f\\u8bb0\\u5f55\\u5728\\u533a\\u5757\\u94fe\\u4e0a\\u3002 \\u8fd9\\u4e9b\\u4fe1\\u606f\\u53ef\\u4ee5\\u88ab\\u524d\\u7aef\\u5e94\\u7528\\u7a0b\\u5e8f\\u6355\\u83b7\\u548c\\u5904\\u7406\\uff0c\\u4ee5\\u4fbf\\u5728\\u7528\\u6237\\u754c\\u9762\\u4e0a\\u663e\\u793a\\u72b6\\u6001\\u7684\\u66f4\\u65b0\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/16_Event.sol\":\"Event\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/16_Event.sol\":{\"keccak256\":\"0xa6ab2c8def62f66d014fcc6b98b7f8336b988b07f322d15f35c07ee5f1269008\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4feed7abb6f29e19b8b435eec47c757dc00b1f35ad3cecf8d6037b39c8f3e307\",\"dweb:/ipfs/Qmb6VdbZaaJkYsHg1uFzJx4sZs4XVFSgyrayv3PyEmJmcP\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b506102138061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f8a8fd6d1461002d575b5f80fd5b610035610037565b005b3373ffffffffffffffffffffffffffffffffffffffff167f0738f4da267a110d810e6e89fc59e46be6de0c37b1d5cd559b267dc3688e74e060405161007b90610157565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f0738f4da267a110d810e6e89fc59e46be6de0c37b1d5cd559b267dc3688e74e06040516100c7906101bf565b60405180910390a27f8ac6a2b989c064f9ea135355f62e5cdaedcb3459d8ed502dfb96dc2d0c27063e60405160405180910390a1565b5f82825260208201905092915050565b7f48656c6c6f20576f726c640000000000000000000000000000000000000000005f82015250565b5f610141600b836100fd565b915061014c8261010d565b602082019050919050565b5f6020820190508181035f83015261016e81610135565b9050919050565b7f48656c6c6f2045564d00000000000000000000000000000000000000000000005f82015250565b5f6101a96009836100fd565b91506101b482610175565b602082019050919050565b5f6020820190508181035f8301526101d68161019d565b905091905056fea2646970667358221220eb30d96bada2a97b6a288ada0c8c9c276a4b919ab5e472908d8e63886e27f0e764736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f8a8fd6d1461002d575b5f80fd5b610035610037565b005b3373ffffffffffffffffffffffffffffffffffffffff167f0738f4da267a110d810e6e89fc59e46be6de0c37b1d5cd559b267dc3688e74e060405161007b90610157565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f0738f4da267a110d810e6e89fc59e46be6de0c37b1d5cd559b267dc3688e74e06040516100c7906101bf565b60405180910390a27f8ac6a2b989c064f9ea135355f62e5cdaedcb3459d8ed502dfb96dc2d0c27063e60405160405180910390a1565b5f82825260208201905092915050565b7f48656c6c6f20576f726c640000000000000000000000000000000000000000005f82015250565b5f610141600b836100fd565b915061014c8261010d565b602082019050919050565b5f6020820190508181035f83015261016e81610135565b9050919050565b7f48656c6c6f2045564d00000000000000000000000000000000000000000000005f82015250565b5f6101a96009836100fd565b91506101b482610175565b602082019050919050565b5f6020820190508181035f8301526101d68161019d565b905091905056fea2646970667358221220eb30d96bada2a97b6a288ada0c8c9c276a4b919ab5e472908d8e63886e27f0e764736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2104:18",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "103:73:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "120:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "125:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "113:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "113:19:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "113:19:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "141:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "160:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "165:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "156:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "156:14:18"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "141:11:18"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "75:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "91:11:18",
                "type": ""
              }
            ],
            "src": "7:169:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "288:55:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "318:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "306:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:14:18"
                      },
                      {
                        "hexValue": "48656c6c6f20576f726c64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "322:13:18",
                        "type": "",
                        "value": "Hello World"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "299:37:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "299:37:18"
                }
              ]
            },
            "name": "store_literal_in_memory_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "280:6:18",
                "type": ""
              }
            ],
            "src": "182:161:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "495:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "505:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "571:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "576:2:18",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "512:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "505:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "677:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
                      "nodeType": "YulIdentifier",
                      "src": "588:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "588:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "690:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "701:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "706:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "697:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "690:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "483:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "491:3:18",
                "type": ""
              }
            ],
            "src": "349:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "892:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "902:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "914:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "925:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "910:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "902:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "949:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "960:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "945:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "945:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "968:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "974:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "964:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "964:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "938:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "938:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "938:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "994:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1128:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1002:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1002:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "994:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "872:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "887:4:18",
                "type": ""
              }
            ],
            "src": "721:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1252:53:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1274:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1282:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1270:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1270:14:18"
                      },
                      {
                        "hexValue": "48656c6c6f2045564d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1286:11:18",
                        "type": "",
                        "value": "Hello EVM"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1263:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1263:35:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1263:35:18"
                }
              ]
            },
            "name": "store_literal_in_memory_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1244:6:18",
                "type": ""
              }
            ],
            "src": "1146:159:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1457:219:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1467:73:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1533:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1538:1:18",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1474:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1474:66:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1467:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1638:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5",
                      "nodeType": "YulIdentifier",
                      "src": "1549:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1549:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1549:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1651:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1662:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1667:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1658:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1658:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1651:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1445:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1453:3:18",
                "type": ""
              }
            ],
            "src": "1311:365:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1853:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1863:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1875:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1886:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1871:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1871:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1863:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1910:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1921:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1906:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1906:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1929:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1935:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1925:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1925:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1899:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1899:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1899:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1955:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2089:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1963:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1955:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1833:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1848:4:18",
                "type": ""
              }
            ],
            "src": "1682:419:18"
          }
        ]
      },
      "contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"Hello World\")\n\n    }\n\n    function abi_encode_t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Hello EVM\")\n\n    }\n\n    function abi_encode_t_stringliteral_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "521:339:7:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "521:339:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;732:125;;;:::i;:::-;;;769:10;765:29;;;;;;;;:::i;:::-;;;;;;;;808:10;804:27;;;;;;;;:::i;:::-;;;;;;;;841:11;;;;;;;;;;732:125::o;7:169:18:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:161::-;322:13;318:1;310:6;306:14;299:37;182:161;:::o;349:366::-;491:3;512:67;576:2;571:3;512:67;:::i;:::-;505:74;;588:93;677:3;588:93;:::i;:::-;706:2;701:3;697:12;690:19;;349:366;;;:::o;721:419::-;887:4;925:2;914:9;910:18;902:26;;974:9;968:4;964:20;960:1;949:9;945:17;938:47;1002:131;1128:4;1002:131;:::i;:::-;994:139;;721:419;;;:::o;1146:159::-;1286:11;1282:1;1274:6;1270:14;1263:35;1146:159;:::o;1311:365::-;1453:3;1474:66;1538:1;1533:3;1474:66;:::i;:::-;1467:73;;1549:93;1638:3;1549:93;:::i;:::-;1667:2;1662:3;1658:12;1651:19;;1311:365;;;:::o;1682:419::-;1848:4;1886:2;1875:9;1871:18;1863:26;;1935:9;1929:4;1925:20;1921:1;1910:9;1906:17;1899:47;1963:131;2089:4;1963:131;:::i;:::-;1955:139;;1682:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\npragma solidity 0.8.20;\r\n\r\n/**\r\n * Events 允许登录到以太坊区块链。事件的一些用例包括\r\n * 侦听事件和更新用户界面\r\n * 事件（Event）是一种在智能合约中记录信息的方式。\r\n * 当某些状态变量的值发生改变时，智能合约可以触发一个事件并将新的信息记录在区块链上。\r\n * 这些信息可以被前端应用程序捕获和处理，以便在用户界面上显示状态的更新\r\n */\r\n\r\ncontract Event {\r\n  // 事件声明\r\n // 最多可以索引3个参数。\r\n // 索引参数可帮助您通过索引参数过滤日志\r\n event Log(address indexed sender,string message);\r\n event AutherLog();\r\n \r\n function test() public {\r\n  emit Log(msg.sender,\"Hello World\");\r\n  emit Log(msg.sender,\"Hello EVM\");\r\n  emit AutherLog();\r\n }\r\n}",
  "sourcePath": "C:\\Users\\Sears\\Desktop\\blockchain_learn\\truffle-example\\contracts\\16_Event.sol",
  "ast": {
    "absolutePath": "project:/contracts/16_Event.sol",
    "exportedSymbols": {
      "Event": [
        616
      ]
    },
    "id": 617,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 586,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:7"
      },
      {
        "id": 587,
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "61:23:7"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Event",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 588,
          "nodeType": "StructuredDocumentation",
          "src": "88:429:7",
          "text": " Events 允许登录到以太坊区块链。事件的一些用例包括\n 侦听事件和更新用户界面\n 事件（Event）是一种在智能合约中记录信息的方式。\n 当某些状态变量的值发生改变时，智能合约可以触发一个事件并将新的信息记录在区块链上。\n 这些信息可以被前端应用程序捕获和处理，以便在用户界面上显示状态的更新"
        },
        "fullyImplemented": true,
        "id": 616,
        "linearizedBaseContracts": [
          616
        ],
        "name": "Event",
        "nameLocation": "530:5:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "0738f4da267a110d810e6e89fc59e46be6de0c37b1d5cd559b267dc3688e74e0",
            "id": 594,
            "name": "Log",
            "nameLocation": "662:3:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "682:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "666:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 592,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "696:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "689:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "665:39:7"
            },
            "src": "656:49:7"
          },
          {
            "anonymous": false,
            "eventSelector": "8ac6a2b989c064f9ea135355f62e5cdaedcb3459d8ed502dfb96dc2d0c27063e",
            "id": 596,
            "name": "AutherLog",
            "nameLocation": "714:9:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "723:2:7"
            },
            "src": "708:18:7"
          },
          {
            "body": {
              "id": 614,
              "nodeType": "Block",
              "src": "755:102:7",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 600,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "769:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "773:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "769:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "48656c6c6f20576f726c64",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "780:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
                          "typeString": "literal_string \"Hello World\""
                        },
                        "value": "Hello World"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
                          "typeString": "literal_string \"Hello World\""
                        }
                      ],
                      "id": 599,
                      "name": "Log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 594,
                      "src": "765:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "EmitStatement",
                  "src": "760:34:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 606,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "808:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "812:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "808:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "48656c6c6f2045564d",
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "819:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5",
                          "typeString": "literal_string \"Hello EVM\""
                        },
                        "value": "Hello EVM"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92c945122a4057c6b8995e5176c65c5afa46aa25aef2ae5bbd85c71ac00e6ae5",
                          "typeString": "literal_string \"Hello EVM\""
                        }
                      ],
                      "id": 605,
                      "name": "Log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 594,
                      "src": "804:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "EmitStatement",
                  "src": "799:32:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 611,
                      "name": "AutherLog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "841:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "841:11:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 613,
                  "nodeType": "EmitStatement",
                  "src": "836:16:7"
                }
              ]
            },
            "functionSelector": "f8a8fd6d",
            "id": 615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test",
            "nameLocation": "741:4:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "745:2:7"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:0:7"
            },
            "scope": 616,
            "src": "732:125:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 617,
        "src": "521:339:7",
        "usedErrors": [],
        "usedEvents": [
          594,
          596
        ]
      }
    ],
    "src": "33:827:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.15",
  "updatedAt": "2023-11-26T08:09:23.347Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Events 允许登录到以太坊区块链。事件的一些用例包括 侦听事件和更新用户界面 事件（Event）是一种在智能合约中记录信息的方式。 当某些状态变量的值发生改变时，智能合约可以触发一个事件并将新的信息记录在区块链上。 这些信息可以被前端应用程序捕获和处理，以便在用户界面上显示状态的更新",
    "version": 1
  }
}